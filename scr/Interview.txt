Interview question - 1

Q: What is the Difference between Byte Code and Intermediate Code?
A:Byte code is considered as the intermediate-level code. Machine Code is considered as the low-level code.


Interview question - 2

Q: Difference between Interpreter and Compiler?

A: Compiler takes a program as a whole. An Interpreter takes single lines of a code. The Compilers generate intermediate machine codes. The Interpreters never generate any intermediate machine codes.



Interview question - 3

Q: Is Python Compiled, Interpreted, or Both?

A: Python is a “COMPILED INTERPRETED” language.

1.This means when the Python program is run,First Python checks for program syntax.
2.Compiles and converts it to bytecode, and directly bytecode is loaded in system memory or virtual machine.
3.Then compiled bytecode interpreted from memory to execute it.

Interview question - 4

Q: Difference between Module, Package, Library, Framework 

A:
Module is a file which contains various Python functions and global variables. It is simply just .py extension file which has python executable code.

Package is a collection of modules.

Library is a collection of packages.

Framework is a collection of libraries. This is the architecture of the program.

Interview question - 5

Q: What is the difference between .py and .pyc files?

A:
py files are Python source files. .pyc files are the compiled bytecode files that are generated by the Python compiler

Interview question - 6

Q: What is a boolean in Python?

A:
Boolean is one of the built-in data types in Python, it mainly contains two values, and they are true and false.

Interview question 7

Q:What Is The Difference Between Pass And Continue In Python? 

A: 
The continue statement makes the loop to resume from the next iteration.
 
On the contrary, the pass statement instructs to do nothing, and the remainder of the code executes as usual.

Interview question 8

Q:
Difference between for and while loops?

A:
For Loop

For loop allows a programmer to execute a sequence of statements several times, it abbreviates the code which helps to manage loop variables.

While loop

While loop allows a programmer to repeat a single statement or a group of statements for the TRUE condition. It verifies the condition before executing the loop.


Interview question 9

Q:What is type conversion in Python?
A: Type conversion refers to the conversion of one data type into another.

int() – converts any data type into integer type

float() – converts any data type into float type


Interview question 10

Q:What is the difference between append and extend?
A:append() adds an object to the end of a list.

a = [1,2,3]
a.append(4)
a #=> [1, 2, 3, 4]
This also means appending a list adds that whole list as a single element, rather than appending each of its values.

a.append([5,6])
a #=> [1, 2, 3, 4, [5, 6]]
.extend() adds each value from a 2nd list as its own element. So extending a list with another list combines their values.

b = [1,2,3]
b.extend([5,6])
b #=> [1, 2, 3, 5, 6]

Interview question 11

Q:What is the difference between “remove” and “pop”?

A:remove() removes the first instance of a matching object. Below we remove the first b.

a = ['a', 'a', 'b', 'b', 'c', 'c']
a.remove('b')
a #=> ['a', 'a', 'b', 'c', 'c']
.pop() removes an object by its index.

The difference between pop and del is that pop returns the popped element. This allows using a list like a stack.

a = ['a', 'a', 'b', 'b', 'c', 'c']
a.pop(4) #=> 'c'
a #=> ['a', 'a', 'b', 'b', 'c']
By default, pop removes the last element from a list if an index isn’t specified.


Interview question 12

Q:How to manipulate every element in a list with list comprehension?

A:Below we return a new list with 1 added to every element.
li = [0,25,50,100][i+1 for i in li] 
#=> [1, 26, 51, 101]

